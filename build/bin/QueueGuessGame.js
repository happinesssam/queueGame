// Generated by Haxe 3.3.0
(function () { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
var Main = function() {
	this.game = new Phaser.Game(500,800,Phaser.AUTO,"test",null);
	this.game.state.add("bootState",com_utterlySuperb_queueGame_states_BootState);
	this.game.state.add("preloadState",com_utterlySuperb_queueGame_states_PreloadState);
	this.game.state.add(com_utterlySuperb_queueGame_states_MainMenuState.MAIN_MENU_STATE,com_utterlySuperb_queueGame_states_MainMenuState);
	this.game.state.add(com_utterlySuperb_queueGame_states_game_GameState.GAME_STATE,com_utterlySuperb_queueGame_states_game_GameState);
	this.game.state.start("bootState");
};
Main.__name__ = true;
Main.main = function() {
	new Main();
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var com_utterlySuperb_queueGame_data_GameData = function() {
	this.money = com_utterlySuperb_queueGame_data_GameData.START_AMOUNT;
	this.soundMuted = false;
};
com_utterlySuperb_queueGame_data_GameData.__name__ = true;
var com_utterlySuperb_queueGame_data_SaveManager = function() {
};
com_utterlySuperb_queueGame_data_SaveManager.__name__ = true;
com_utterlySuperb_queueGame_data_SaveManager.saveGame = function() {
	var storage = js_Browser.getLocalStorage();
	if(storage == null) {
		return;
	}
	storage.setItem("gameData",JSON.stringify(Main.gameData));
};
com_utterlySuperb_queueGame_data_SaveManager.getGame = function() {
	var storage = js_Browser.getLocalStorage();
	if(storage == null) {
		return new com_utterlySuperb_queueGame_data_GameData();
	}
	var gameState = storage.getItem("gameData");
	if(gameState != null && gameState.length > 0) {
		return JSON.parse(gameState);
	} else {
		return new com_utterlySuperb_queueGame_data_GameData();
	}
};
var com_utterlySuperb_queueGame_states_BootState = function() {
	Phaser.State.call(this);
	Main.gameData = com_utterlySuperb_queueGame_data_SaveManager.getGame();
};
com_utterlySuperb_queueGame_states_BootState.__name__ = true;
com_utterlySuperb_queueGame_states_BootState.__super__ = Phaser.State;
com_utterlySuperb_queueGame_states_BootState.prototype = $extend(Phaser.State.prototype,{
	preload: function() {
		this.load.spritesheet("preloadAssets","assets/images/preloadAssets.png",190,49);
	}
	,create: function() {
		this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
		this.scale.setMinMax(250,400,500,800);
		this.game.state.start("preloadState");
	}
});
var com_utterlySuperb_queueGame_states_MainMenuState = function() {
	Phaser.State.call(this);
};
com_utterlySuperb_queueGame_states_MainMenuState.__name__ = true;
com_utterlySuperb_queueGame_states_MainMenuState.__super__ = Phaser.State;
com_utterlySuperb_queueGame_states_MainMenuState.prototype = $extend(Phaser.State.prototype,{
	create: function() {
		var title = com_utterlySuperb_queueGame_ui_TextHelper.getText(this.game,0,100,40,"#FFFFFF","Queueueuz");
		this.game.add.existing(title);
		title.x = (this.stage.width - title.width) / 2;
		this.startButton = new com_utterlySuperb_queueGame_ui_PhaserTextButton(this.game,200,200,com_utterlySuperb_queueGame_ui_PhaserTextButtonType.bigYellow,"Start",$bind(this,this.clickStart),this);
		this.startButton.x = (this.stage.width - this.startButton.width) / 2;
		this.game.add.existing(this.startButton);
		if(Main.gameData.money != com_utterlySuperb_queueGame_data_GameData.START_AMOUNT) {
			this.startButton.setText("Continue");
			var newButton = new com_utterlySuperb_queueGame_ui_PhaserTextButton(this.game,200,270,com_utterlySuperb_queueGame_ui_PhaserTextButtonType.bigYellow,"New Game",$bind(this,this.clickNewGame),this);
			newButton.x = (this.stage.width - this.startButton.width) / 2;
			this.game.add.existing(newButton);
		}
		var attr = com_utterlySuperb_queueGame_ui_TextHelper.getText(this.game,0,770,16,"#FFFFFF","Art assets by Sunisa Thondaengdee");
		this.game.add.existing(attr);
		attr.x = (this.game.width - attr.width) / 2;
	}
	,clickNewGame: function(button) {
		Main.gameData.money = com_utterlySuperb_queueGame_data_GameData.START_AMOUNT;
		this.game.state.start(com_utterlySuperb_queueGame_states_game_GameState.GAME_STATE);
	}
	,clickStart: function(button) {
		this.game.state.start(com_utterlySuperb_queueGame_states_game_GameState.GAME_STATE);
	}
});
var com_utterlySuperb_queueGame_states_PreloadState = function() {
	Phaser.State.call(this);
};
com_utterlySuperb_queueGame_states_PreloadState.__name__ = true;
com_utterlySuperb_queueGame_states_PreloadState.__super__ = Phaser.State;
com_utterlySuperb_queueGame_states_PreloadState.prototype = $extend(Phaser.State.prototype,{
	init: function() {
		this.game.add.existing(new Phaser.Sprite(this.game,155,250,"preloadAssets",0));
		this.bar = new Phaser.Sprite(this.game,155,250,"preloadAssets",1);
		this.game.add.existing(this.bar);
		this.cropRect = new Phaser.Rectangle(0,0,0,49);
		this.bar.crop(this.cropRect);
		this.bar.updateCrop();
	}
	,preload: function() {
		this.load.atlasXML("sprites","assets/images/atlas_0.png","assets/images/atlas_0.xml");
		this.load.audio("beep",["assets/sounds/beep.mp3","assets/sounds/beep.ogg"]);
		this.load.audio("sell",["assets/sounds/sell_buy_item.mp3","assets/sounds/sell_buy_item.ogg"]);
		this.load.audio("theme",["assets/sounds/williamTell.mp3","assets/sounds/williamTell.ogg"]);
		this.load.audio("themeFast",["assets/sounds/williamTell_fast.mp3","assets/sounds/williamTell_fast.ogg"]);
	}
	,create: function() {
		this.game.state.start(com_utterlySuperb_queueGame_states_MainMenuState.MAIN_MENU_STATE);
	}
	,loadUpdate: function() {
		this.cropRect.width = 190 * this.load.progress / 100;
		this.bar.updateCrop();
	}
});
var com_utterlySuperb_queueGame_states_game_GameState = function() {
	Phaser.State.call(this);
};
com_utterlySuperb_queueGame_states_game_GameState.__name__ = true;
com_utterlySuperb_queueGame_states_game_GameState.__super__ = Phaser.State;
com_utterlySuperb_queueGame_states_game_GameState.prototype = $extend(Phaser.State.prototype,{
	create: function() {
		this.game.add.tileSprite(0,0,this.game.width,this.game.height,"sprites","floorTile");
		this.finishPositions = [];
		this.queues = [];
		var _g = 0;
		while(_g < 3) {
			var i = _g++;
			this.queues.push(new com_utterlySuperb_queueGame_states_game_gameObjects_Queue(this.game,i));
			this.game.add.existing(this.queues[i]);
		}
		this.hud = new com_utterlySuperb_queueGame_states_game_hud_Hud(this.game);
		this.game.add.existing(this.hud);
		this.hud.clickSignal.add($bind(this,this.hudEvent),this);
		this.bet = 10;
		this.hud.showStart(this.bet);
		this.hud.setStartmoney(Main.gameData.money - this.bet);
		this.theme = this.game.add.audio("theme",1,true);
		this.themeFast = this.game.add.audio("themeFast",1,true);
		this.gameStage = com_utterlySuperb_queueGame_states_game_GameStageType.preGame;
	}
	,update: function() {
		switch(this.gameStage[1]) {
		case 0:case 2:case 3:
			break;
		case 1:
			this.playUpdate();
			break;
		}
	}
	,playUpdate: function() {
		var _g1 = 0;
		var _g = this.speed;
		while(_g1 < _g) {
			++_g1;
			var queuesDone = 0;
			var _g3 = 0;
			var _g2 = this.queues.length;
			while(_g3 < _g2) {
				var i = _g3++;
				this.queues[i].updateActors();
				if(this.queues[i].finished) {
					if(this.finishPositions.indexOf(i) == -1) {
						this.finishPositions.push(i);
						this.queues[i].setFinishPos(this.finishPositions.length);
					} else if(this.queues[i].allShoppersOut()) {
						++queuesDone;
					}
				}
			}
			if(queuesDone == 3) {
				this.gameStage = com_utterlySuperb_queueGame_states_game_GameStageType.postGame;
				var multiplier = 0;
				if(this.chosenQueue == this.finishPositions[0]) {
					multiplier = 2;
				} else if(this.chosenQueue == this.finishPositions[1]) {
					multiplier = 0.5;
				}
				var winnings = Math.round(multiplier * this.bet);
				Main.gameData.money += winnings;
				com_utterlySuperb_queueGame_data_SaveManager.saveGame();
				this.hud.showEnd(this.finishPositions,this.chosenQueue,winnings);
				if(this.currentTheme != null) {
					this.currentTheme.stop();
				}
				return;
			}
		}
	}
	,hudEvent: function(eventType,eventParam) {
		switch(eventType) {
		case "clickBet":
			this.startGame(Std.parseInt(eventParam));
			break;
		case "clickPlayPause":
			if(this.gameStage == com_utterlySuperb_queueGame_states_game_GameStageType.inGame) {
				this.gameStage = com_utterlySuperb_queueGame_states_game_GameStageType.isPaused;
				this.hud.setPlayPause(true);
				this.currentTheme.pause();
			} else if(this.gameStage == com_utterlySuperb_queueGame_states_game_GameStageType.isPaused) {
				this.gameStage = com_utterlySuperb_queueGame_states_game_GameStageType.inGame;
				this.hud.setPlayPause(false);
				this.currentTheme.resume();
			}
			break;
		case "soundChange":
			if(this.gameStage == com_utterlySuperb_queueGame_states_game_GameStageType.inGame) {
				if(Main.gameData.soundMuted) {
					this.currentTheme.stop();
					this.currentTheme = null;
				} else {
					this.checkTheme();
				}
			}
			break;
		case "switchSpeed":
			if(this.gameStage == com_utterlySuperb_queueGame_states_game_GameStageType.inGame) {
				var newSpeed = Std.parseInt(eventParam);
				if(this.speed != newSpeed) {
					this.speed = newSpeed;
					this.checkTheme();
				}
			} else {
				this.bet = Std.parseInt(eventParam);
				this.hud.setStartmoney(Main.gameData.money - this.bet);
			}
			break;
		}
	}
	,checkTheme: function() {
		if(this.speed > 1) {
			this.switchTheme(this.theme,this.themeFast);
		} else if(this.speed == 1) {
			this.switchTheme(this.themeFast,this.theme);
		}
	}
	,switchTheme: function(theme0,theme1) {
		if(this.currentTheme != theme1 && !Main.gameData.soundMuted) {
			if(this.currentTheme != null) {
				this.currentTheme.stop();
			}
			theme1.play("",0,1,true,false);
			this.currentTheme = theme1;
		}
	}
	,startGame: function(queue) {
		this.chosenQueue = queue;
		this.speed = 1;
		if(!Main.gameData.soundMuted) {
			this.currentTheme = this.theme;
			this.theme.play("",0,1,true);
		}
		this.hud.showInGame(this.chosenQueue,this.bet);
		Main.gameData.money -= this.bet;
		this.gameStage = com_utterlySuperb_queueGame_states_game_GameStageType.inGame;
	}
});
var com_utterlySuperb_queueGame_states_game_GameStageType = { __ename__ : true, __constructs__ : ["preGame","inGame","postGame","isPaused"] };
com_utterlySuperb_queueGame_states_game_GameStageType.preGame = ["preGame",0];
com_utterlySuperb_queueGame_states_game_GameStageType.preGame.__enum__ = com_utterlySuperb_queueGame_states_game_GameStageType;
com_utterlySuperb_queueGame_states_game_GameStageType.inGame = ["inGame",1];
com_utterlySuperb_queueGame_states_game_GameStageType.inGame.__enum__ = com_utterlySuperb_queueGame_states_game_GameStageType;
com_utterlySuperb_queueGame_states_game_GameStageType.postGame = ["postGame",2];
com_utterlySuperb_queueGame_states_game_GameStageType.postGame.__enum__ = com_utterlySuperb_queueGame_states_game_GameStageType;
com_utterlySuperb_queueGame_states_game_GameStageType.isPaused = ["isPaused",3];
com_utterlySuperb_queueGame_states_game_GameStageType.isPaused.__enum__ = com_utterlySuperb_queueGame_states_game_GameStageType;
var com_utterlySuperb_queueGame_states_game_gameObjects_Counter = function(game,x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.scanY = 50;
	this.maxY = 0;
	this.unloadY = 10;
	Phaser.Group.call(this,game);
	this.x = x;
	this.y = y;
	this.counter = new Phaser.Sprite(game,20,0,"sprites","counter");
	this.add(this.counter);
	this.groceries = new Phaser.Group(game);
	this.add(this.groceries);
	this.groceries.x = 14;
	this.teller = new Phaser.Sprite(game,0,40,"sprites","teller");
	this.add(this.teller);
	this.processSpeed = 1 + Math.random();
	this.groceriesArray = [];
	this.beep = game.add.audio("beep");
};
com_utterlySuperb_queueGame_states_game_gameObjects_Counter.__name__ = true;
com_utterlySuperb_queueGame_states_game_gameObjects_Counter.__super__ = Phaser.Group;
com_utterlySuperb_queueGame_states_game_gameObjects_Counter.prototype = $extend(Phaser.Group.prototype,{
	addNewItem: function(item) {
		this.groceries.add(item);
		this.groceriesArray.push(item);
		item.x = 10;
		item.y = 120;
	}
	,allItemsGone: function() {
		return this.groceriesArray.length == 0;
	}
	,updateItems: function() {
		this.maxY = 0;
		var _g1 = 0;
		var _g = this.groceriesArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!this.groceriesArray[i].beenScanned) {
				this.groceriesArray[i].y = Math.max(Math.max(this.maxY,this.scanY),this.groceriesArray[i].y - this.processSpeed);
				if(this.groceriesArray[i].y <= this.scanY) {
					if(this.groceriesArray[i] == this.scanItem) {
						this.scanTime -= this.processSpeed;
						if(this.scanTime <= 0) {
							this.groceriesArray[i].beenScanned = true;
							if(!Main.gameData.soundMuted) {
								this.beep.play();
							}
						}
					} else {
						this.scanTime = 100;
						this.scanItem = this.groceriesArray[i];
					}
				}
			} else {
				this.groceriesArray[i].y = Math.max(Math.max(this.maxY,this.unloadY),this.groceriesArray[i].y - this.processSpeed);
				if(this.groceriesArray[i].y == this.unloadY) {
					this.itemForUnload = this.groceriesArray[i];
				}
			}
			this.maxY = this.groceriesArray[i].y + this.groceriesArray[i].height;
		}
	}
	,takeItem: function() {
		this.groceries.remove(this.itemForUnload);
		HxOverrides.remove(this.groceriesArray,this.itemForUnload);
		var item = this.itemForUnload;
		this.itemForUnload = null;
		return item;
	}
	,hasSpaceForItem: function() {
		return this.maxY < 90;
	}
});
var com_utterlySuperb_queueGame_states_game_gameObjects_GroceryItem = function(game,x,y,key,frame) {
	Phaser.Sprite.call(this,game,x,y,key,frame);
};
com_utterlySuperb_queueGame_states_game_gameObjects_GroceryItem.__name__ = true;
com_utterlySuperb_queueGame_states_game_gameObjects_GroceryItem.__super__ = Phaser.Sprite;
com_utterlySuperb_queueGame_states_game_gameObjects_GroceryItem.prototype = $extend(Phaser.Sprite.prototype,{
});
var com_utterlySuperb_queueGame_states_game_gameObjects_PayingDisplay = function(game,x,y) {
	Phaser.Group.call(this,game);
	this.x = x;
	this.y = y;
	this.add(new Phaser.Sprite(game,0,0,"sprites","paying1"));
	this.bar = new Phaser.Sprite(game,0,0,"sprites","paying0");
	this.add(this.bar);
	this.cropRect = new Phaser.Rectangle(0,0,140,49);
	this.bar.crop(this.cropRect);
};
com_utterlySuperb_queueGame_states_game_gameObjects_PayingDisplay.__name__ = true;
com_utterlySuperb_queueGame_states_game_gameObjects_PayingDisplay.__super__ = Phaser.Group;
com_utterlySuperb_queueGame_states_game_gameObjects_PayingDisplay.prototype = $extend(Phaser.Group.prototype,{
	setValue: function(value) {
		this.cropRect.width = Math.floor(140 * value);
		this.bar.updateCrop();
	}
});
var com_utterlySuperb_queueGame_states_game_gameObjects_Queue = function(game,index) {
	this.maxPayTime = 200;
	this.unloadY = 180;
	Phaser.Group.call(this,game);
	this.index = index;
	this.x = 15 + 165 * index;
	this.counter = new com_utterlySuperb_queueGame_states_game_gameObjects_Counter(game,0,175);
	this.add(this.counter);
	this.shoppers = [];
	this.outShoppers = [];
	this.setUp();
	this.ching = game.add.audio("sell");
};
com_utterlySuperb_queueGame_states_game_gameObjects_Queue.__name__ = true;
com_utterlySuperb_queueGame_states_game_gameObjects_Queue.__super__ = Phaser.Group;
com_utterlySuperb_queueGame_states_game_gameObjects_Queue.prototype = $extend(Phaser.Group.prototype,{
	setUp: function() {
		var numItems = 25 + Math.floor(Math.random() * 10);
		var numShoppers = 2 + Math.floor(Math.random() * 3);
		var _g1 = 0;
		while(_g1 < numShoppers) {
			++_g1;
			var shopper = new com_utterlySuperb_queueGame_states_game_gameObjects_Shopper(this.game);
			this.shoppers.push(shopper);
			shopper.init(Math.round(numItems / numShoppers),2 + Math.random() * 2,1 + Math.random());
			this.add(shopper);
		}
		this.shoppers[0].y = this.unloadY + 30;
		var _g11 = 1;
		var _g = this.shoppers.length;
		while(_g11 < _g) {
			var i = _g11++;
			this.shoppers[i].y = this.shoppers[i - 1].getBot();
		}
		this.payingDisplay = new com_utterlySuperb_queueGame_states_game_gameObjects_PayingDisplay(this.game,0,155);
		this.add(this.payingDisplay);
		this.payingDisplay.setValue(0.75);
		this.payingDisplay.visible = false;
		this.finished = false;
	}
	,updateActors: function() {
		var destY = 0;
		if(this.outShoppers.length > 0) {
			var _g1 = 0;
			var _g = this.outShoppers.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.outShoppers[i].move(destY);
				destY = this.outShoppers[i].getBot();
			}
			if(this.outShoppers[0].y <= 0) {
				this.remove(this.outShoppers[0]);
				this.outShoppers[0].destroy(true);
				this.outShoppers.shift();
			}
		}
		if(this.shoppers.length == 0) {
			return;
		}
		destY = Math.max(destY,this.unloadY);
		if(this.shoppers[0].y > this.unloadY) {
			this.shoppers[0].move(destY);
		} else {
			if(this.counter.hasSpaceForItem() && this.shoppers[0].hasUnboughtItem()) {
				this.counter.addNewItem(this.shoppers[0].getUnboughtItem());
			}
			if(this.counter.itemForUnload != null && this.shoppers[0].canTakeBack()) {
				var tmp = this.counter.takeItem();
				this.shoppers[0].addItem(tmp,true);
			}
			this.counter.updateItems();
			if(!this.shoppers[0].hasUnboughtItem() && this.counter.allItemsGone()) {
				if(!this.paying) {
					this.paying = true;
					this.payingDisplay.visible = true;
					this.payTime = this.maxPayTime;
				} else {
					this.payTime = Math.max(0,this.payTime - this.counter.processSpeed - this.shoppers[0].processSpeed);
					if(this.payTime <= 0) {
						if(!Main.gameData.soundMuted) {
							this.ching.play();
						}
						this.payingDisplay.visible = false;
						this.paying = false;
						this.outShoppers.push(this.shoppers.shift());
						this.finished = this.shoppers.length == 0;
					} else {
						this.payingDisplay.setValue(1 - this.payTime / this.maxPayTime);
					}
				}
			}
		}
		var _g11 = 1;
		var _g2 = this.shoppers.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var tmp1 = this.shoppers[i1 - 1].getBot();
			this.shoppers[i1].move(tmp1);
		}
	}
	,setFinishPos: function(position) {
		this.add(new Phaser.Sprite(this.game,100,180,"sprites","medal" + (position - 1)));
	}
	,shopperOut: function(shopper) {
		this.remove(shopper);
		shopper.destroy(true);
	}
	,allShoppersOut: function() {
		if(this.shoppers.length == 0) {
			return this.outShoppers.length == 0;
		} else {
			return false;
		}
	}
});
var com_utterlySuperb_queueGame_states_game_gameObjects_Shopper = function(game) {
	Phaser.Group.call(this,game);
	this.x = 70;
	this.feet = new Phaser.Sprite(game,35,85,"sprites","feet");
	this.feet.anchor.x = 0.5;
	this.add(this.feet);
	this.cart = new Phaser.Sprite(game,0,0,"sprites","cart");
	this.add(this.cart);
	this.groceries = new Phaser.Group(game);
	this.add(this.groceries);
	this.body = new Phaser.Sprite(game,10,94,"sprites","body" + Math.floor(Math.random() * 4));
	this.add(this.body);
	this.head = new Phaser.Sprite(game,20,94,"sprites","head" + Math.floor(Math.random() * 5));
	this.add(this.head);
	this.unboughtItems = [];
	this.boughtItems = [];
	this.takeTime = 100;
};
com_utterlySuperb_queueGame_states_game_gameObjects_Shopper.__name__ = true;
com_utterlySuperb_queueGame_states_game_gameObjects_Shopper.__super__ = Phaser.Group;
com_utterlySuperb_queueGame_states_game_gameObjects_Shopper.prototype = $extend(Phaser.Group.prototype,{
	init: function(numItems,moveSpeed,processSpeed) {
		this.moveSpeed = moveSpeed;
		this.processSpeed = processSpeed;
		var _g1 = 0;
		while(_g1 < numItems) {
			++_g1;
			this.addItem(new com_utterlySuperb_queueGame_states_game_gameObjects_GroceryItem(this.game,0,0,"sprites",com_utterlySuperb_queueGame_states_game_gameObjects_Shopper.items[Math.floor(Math.random() * com_utterlySuperb_queueGame_states_game_gameObjects_Shopper.items.length)]),false);
		}
	}
	,move: function(minY) {
		this.y = Math.max(minY,this.y - this.moveSpeed);
	}
	,getBot: function() {
		return this.y + this.height;
	}
	,canTakeBack: function() {
		if(this.takeTime <= 0) {
			this.takeTime = 100;
			return true;
		} else {
			this.takeTime -= this.processSpeed;
		}
		return false;
	}
	,addItem: function(item,bought) {
		this.groceries.add(item);
		if(bought) {
			this.boughtItems.push(item);
		} else {
			this.unboughtItems.push(item);
		}
		item.x = 5 + Math.random() * 35;
		item.y = 5 + Math.random() * 70;
	}
	,canTakeBoughtItem: function() {
		return false;
	}
	,hasUnboughtItem: function() {
		return this.unboughtItems.length > 0;
	}
	,getUnboughtItem: function() {
		if(this.unboughtItems.length > 0) {
			var item = this.unboughtItems.shift();
			this.groceries.remove(item);
			return item;
		}
		return null;
	}
});
var com_utterlySuperb_queueGame_states_game_hud_Hud = function(game) {
	Phaser.Group.call(this,game);
	var bg = new Phaser.Graphics(game);
	bg.beginFill(16774661);
	bg.drawRect(0,0,game.width,140);
	bg.beginFill(14526976);
	bg.drawRect(0,136,game.width,4);
	bg.beginFill(0,0.5);
	bg.drawRect(0,140,game.width,4);
	this.add(bg);
	this.title = com_utterlySuperb_queueGame_ui_TextHelper.getText(game,30,15,28,"#FFFFFF","Place your bet!".toUpperCase(),"body");
	this.add(this.title);
	com_utterlySuperb_queueGame_ui_TextHelper.setHudEffect(this.title);
	this.info = com_utterlySuperb_queueGame_ui_TextHelper.getText(game,10,15,28,"#FFFFFF","","body");
	this.add(this.info);
	com_utterlySuperb_queueGame_ui_TextHelper.setHudEffect(this.info);
	this.clickSignal = new Phaser.Signal();
};
com_utterlySuperb_queueGame_states_game_hud_Hud.__name__ = true;
com_utterlySuperb_queueGame_states_game_hud_Hud.__super__ = Phaser.Group;
com_utterlySuperb_queueGame_states_game_hud_Hud.prototype = $extend(Phaser.Group.prototype,{
	showStart: function(defaultBet) {
		this.title.text = "Current: $" + Main.gameData.money;
		this.betButtons = [];
		var _g = 0;
		while(_g < 3) {
			var i = _g++;
			var button = new com_utterlySuperb_queueGame_ui_PhaserTextButton(this.game,31 + i * 156,80,com_utterlySuperb_queueGame_ui_PhaserTextButtonType.bigBlue,"Bet!",$bind(this,this.clickBet),this);
			button.setButtonWidth(125);
			this.add(button);
			button.clickParam = i == null?"null":"" + i;
			this.betButtons.push(button);
		}
		this.speedWidget = new com_utterlySuperb_queueGame_states_game_hud_SpeedWidget(this.game);
		this.add(this.speedWidget);
		this.speedWidget.x = 320;
		this.speedWidget.y = 5;
		this.speedWidget.setUp("",defaultBet,10,Main.gameData.money,10);
		this.speedWidget.changeSignal.add($bind(this,this.speedChange),this);
		this.info.text = "Bet";
		this.info.x = 310 - this.info.width;
	}
	,setStartmoney: function(amount) {
		this.title.text = "Current: $" + amount;
	}
	,showInGame: function(guess,amount) {
		this.title.text = "Queue:" + (guess + 1);
		this.info.text = "Bet:" + amount;
		this.info.x = this.title.x;
		this.info.y = this.title.y + this.title.height + 10;
		var _g1 = 0;
		var _g = this.betButtons.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.remove(this.betButtons[i]);
			this.betButtons[i].destroy(true);
			console.log(this.betButtons[i]);
		}
		this.betButtons = null;
		this.speedWidget.x = 250;
		this.speedWidget.y = 70;
		this.speedWidget.setUp("Speed",1,1,3,1);
		this.speedWidget.setSpeed(1);
		this.playPauseButton = new com_utterlySuperb_queueGame_ui_PhaserTextButton(this.game,420,80,com_utterlySuperb_queueGame_ui_PhaserTextButtonType.smallBlue,"",$bind(this,this.clickPlayPause),this);
		this.add(this.playPauseButton);
		this.setPlayPause(false);
		this.muteButton = new com_utterlySuperb_queueGame_ui_PhaserTextButton(this.game,420,20,com_utterlySuperb_queueGame_ui_PhaserTextButtonType.smallBlue,"",$bind(this,this.toggleSoundButton),this);
		this.add(this.muteButton);
		this.setSoundButton();
	}
	,showEnd: function(finishPositions,playerGuess,winnings) {
		this.speedWidget.cleanUp();
		this.remove(this.speedWidget);
		this.speedWidget.destroy(true);
		this.speedWidget = null;
		this.remove(this.playPauseButton);
		this.playPauseButton.destroy(true);
		this.playPauseButton = null;
		this.remove(this.muteButton);
		this.muteButton.destroy(true);
		this.muteButton = null;
		this.title.text = "Queue " + (finishPositions[0] + 1) + " wins! Queue " + (finishPositions[1] + 1) + " comes 2nd";
		var infoStr = "You guessed queue " + (playerGuess + 1);
		if(winnings > 0) {
			infoStr += " and win " + winnings;
		}
		this.info.text = infoStr;
		var feedback = com_utterlySuperb_queueGame_ui_TextHelper.getText(this.game,10,320,32);
		this.add(feedback);
		com_utterlySuperb_queueGame_ui_TextHelper.setHudEffect(feedback);
		if(Main.gameData.money > 10) {
			feedback.text = "Current cash: $" + Main.gameData.money;
		} else {
			feedback.text = "Game over";
		}
		feedback.x = (this.game.width - feedback.width) / 2;
		var continueButton = new com_utterlySuperb_queueGame_ui_PhaserTextButton(this.game,120,380,com_utterlySuperb_queueGame_ui_PhaserTextButtonType.bigBlue,"Continue",$bind(this,this.clickContinue),this);
		continueButton.x = (this.game.width - continueButton.width) / 2;
	}
	,clickContinue: function(button) {
		if(Main.gameData.money > 10) {
			this.game.state.start(com_utterlySuperb_queueGame_states_game_GameState.GAME_STATE);
		} else {
			Main.gameData.money = com_utterlySuperb_queueGame_data_GameData.START_AMOUNT;
			com_utterlySuperb_queueGame_data_SaveManager.saveGame();
			this.game.state.start(com_utterlySuperb_queueGame_states_MainMenuState.MAIN_MENU_STATE);
		}
	}
	,setPlayPause: function(isPaused) {
		this.playPauseButton.addSprite(isPaused?"play":"pause");
	}
	,toggleSoundButton: function(button) {
		Main.gameData.soundMuted = !Main.gameData.soundMuted;
		this.setSoundButton();
		this.clickSignal.dispatch("soundChange");
	}
	,setSoundButton: function() {
		this.muteButton.addSprite(Main.gameData.soundMuted?"audioOff":"audioOn");
	}
	,clickBet: function(button) {
		this.clickSignal.dispatch("clickBet",button.parent.clickParam);
	}
	,clickPlayPause: function(button) {
		this.clickSignal.dispatch("clickPlayPause");
	}
	,speedChange: function() {
		this.clickSignal.dispatch("switchSpeed",Std.string(this.speedWidget.currentSpeed));
	}
});
var com_utterlySuperb_queueGame_states_game_hud_SpeedWidget = function(game) {
	this.increment = 1;
	this.minSpeed = 1;
	this.maxSpeed = 3;
	this.currentSpeed = -1;
	Phaser.Group.call(this,game);
	this.x = 20;
	this.y = 70;
	this.slowDown = new com_utterlySuperb_queueGame_ui_PhaserTextButton(game,0,10,com_utterlySuperb_queueGame_ui_PhaserTextButtonType.smallBlue,"<",$bind(this,this.slowDownClick),this);
	this.add(this.slowDown);
	this.speedUp = new com_utterlySuperb_queueGame_ui_PhaserTextButton(game,100,10,com_utterlySuperb_queueGame_ui_PhaserTextButtonType.smallBlue,">",$bind(this,this.speedUpClick),this);
	this.add(this.speedUp);
	this.speedDisplay = com_utterlySuperb_queueGame_ui_TextHelper.getText(game,55,10,32);
	this.add(this.speedDisplay);
	com_utterlySuperb_queueGame_ui_TextHelper.setHudEffect(this.speedDisplay);
	this.label = com_utterlySuperb_queueGame_ui_TextHelper.getText(game,40,-25,24,"#FFFFFF","Speed");
	this.add(this.label);
	com_utterlySuperb_queueGame_ui_TextHelper.setHudEffect(this.label);
	this.changeSignal = new Phaser.Signal();
};
com_utterlySuperb_queueGame_states_game_hud_SpeedWidget.__name__ = true;
com_utterlySuperb_queueGame_states_game_hud_SpeedWidget.__super__ = Phaser.Group;
com_utterlySuperb_queueGame_states_game_hud_SpeedWidget.prototype = $extend(Phaser.Group.prototype,{
	setUp: function(copy,defaultVal,minVal,maxVal,increment) {
		this.increment = increment;
		this.label.text = copy;
		this.currentSpeed = defaultVal;
		this.speedDisplay.text = Std.string(this.currentSpeed);
		this.maxSpeed = maxVal;
		this.minSpeed = minVal;
	}
	,speedUpClick: function(button) {
		this.setSpeed(this.currentSpeed + this.increment);
	}
	,slowDownClick: function(button) {
		this.setSpeed(this.currentSpeed - this.increment);
	}
	,setSpeed: function(speed) {
		speed = Math.floor(Math.min(this.maxSpeed,Math.max(this.minSpeed,speed)));
		if(speed != this.currentSpeed) {
			this.currentSpeed = speed;
			this.speedDisplay.text = Std.string(this.currentSpeed);
			this.changeSignal.dispatch();
			this.speedDisplay.x = 75 - Math.floor(this.speedDisplay.width / 2);
		}
	}
	,cleanUp: function() {
		this.changeSignal.dispose();
	}
	,disable: function() {
	}
});
var com_utterlySuperb_queueGame_ui_PhaserTextButton = function(game,x,y,type,copy,callback,context) {
	if(copy == null) {
		copy = "";
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	Phaser.Group.call(this,game);
	this.x = x;
	this.y = y;
	if(type == null) {
		type = com_utterlySuperb_queueGame_ui_PhaserTextButtonType.bigYellow;
	} else {
		type = type;
	}
	var framePrefix = "buttonYellowBig";
	var size = 28;
	switch(type[1]) {
	case 0:
		framePrefix = "buttonYellowBig";
		break;
	case 1:
		framePrefix = "buttonYellowSmall";
		size = 22;
		break;
	case 2:
		framePrefix = "buttonBlueBig";
		break;
	case 3:
		framePrefix = "buttonBlueSmall";
		size = 22;
		break;
	}
	this.button = new Phaser.Button(game,0,0,"sprites",callback,context,framePrefix + "Over",framePrefix + "Up",framePrefix + "Down",framePrefix + "Over");
	this.add(this.button);
	this.text = com_utterlySuperb_queueGame_ui_TextHelper.getText(game,0,0,size);
	this.add(this.text);
	if(copy.length > 0) {
		this.setText(copy);
	}
	this.sprite = new Phaser.Sprite(game,0,0,"sprites");
	this.add(this.sprite);
	this.sprite.visible = false;
};
com_utterlySuperb_queueGame_ui_PhaserTextButton.__name__ = true;
com_utterlySuperb_queueGame_ui_PhaserTextButton.__super__ = Phaser.Group;
com_utterlySuperb_queueGame_ui_PhaserTextButton.prototype = $extend(Phaser.Group.prototype,{
	setButtonWidth: function(width) {
		this.button.width = width;
		this.centerText();
	}
	,addOverSound: function(sound) {
		this.button.setOverSound(sound);
	}
	,addClickSound: function(sound) {
		this.button.setUpSound(sound);
	}
	,addSprite: function(frame) {
		this.sprite.frameName = frame;
		this.sprite.visible = true;
		this.sprite.x = Math.round((this.button.width - this.sprite.width) / 2);
		this.sprite.y = Math.round((this.button.height - this.sprite.height) / 2);
	}
	,hideSprite: function() {
		this.sprite.visible = false;
	}
	,setText: function(copy) {
		this.text.text = copy;
		this.centerText();
	}
	,centerText: function() {
		this.text.x = Math.round((this.button.width - this.text.width) / 2);
		this.text.y = Math.round((this.button.height - this.text.height) / 2);
	}
});
var com_utterlySuperb_queueGame_ui_PhaserTextButtonType = { __ename__ : true, __constructs__ : ["bigYellow","smallYellow","bigBlue","smallBlue"] };
com_utterlySuperb_queueGame_ui_PhaserTextButtonType.bigYellow = ["bigYellow",0];
com_utterlySuperb_queueGame_ui_PhaserTextButtonType.bigYellow.__enum__ = com_utterlySuperb_queueGame_ui_PhaserTextButtonType;
com_utterlySuperb_queueGame_ui_PhaserTextButtonType.smallYellow = ["smallYellow",1];
com_utterlySuperb_queueGame_ui_PhaserTextButtonType.smallYellow.__enum__ = com_utterlySuperb_queueGame_ui_PhaserTextButtonType;
com_utterlySuperb_queueGame_ui_PhaserTextButtonType.bigBlue = ["bigBlue",2];
com_utterlySuperb_queueGame_ui_PhaserTextButtonType.bigBlue.__enum__ = com_utterlySuperb_queueGame_ui_PhaserTextButtonType;
com_utterlySuperb_queueGame_ui_PhaserTextButtonType.smallBlue = ["smallBlue",3];
com_utterlySuperb_queueGame_ui_PhaserTextButtonType.smallBlue.__enum__ = com_utterlySuperb_queueGame_ui_PhaserTextButtonType;
var com_utterlySuperb_queueGame_ui_TextHelper = function() {
};
com_utterlySuperb_queueGame_ui_TextHelper.__name__ = true;
com_utterlySuperb_queueGame_ui_TextHelper.getText = function(game,x,y,size,colour,copy,type,align) {
	if(align == null) {
		align = "left";
	}
	if(type == null) {
		type = "body";
	}
	if(copy == null) {
		copy = "";
	}
	if(colour == null) {
		colour = "#FFFFFF";
	}
	if(size == null) {
		size = 18;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var style = { font : size + "px " + (type == "body"?"Arial":"Georgia"), fill : colour, align : align};
	return new Phaser.Text(game,x,y,copy,style);
};
com_utterlySuperb_queueGame_ui_TextHelper.setHudEffect = function(text) {
	text.stroke = "#0055ef";
	text.strokeThickness = 5;
	text.setShadow(2,2,"#333333",2,true,false);
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_Browser = function() { };
js_Browser.__name__ = true;
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		return null;
	}
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.__name__ = true;
Array.__name__ = true;
Main.SPRITES = "sprites";
com_utterlySuperb_queueGame_data_GameData.START_AMOUNT = 50;
com_utterlySuperb_queueGame_states_BootState.BOOT_STATE = "bootState";
com_utterlySuperb_queueGame_states_MainMenuState.MAIN_MENU_STATE = "mainMenuState";
com_utterlySuperb_queueGame_states_PreloadState.PRELOAD_STATE = "preloadState";
com_utterlySuperb_queueGame_states_game_GameState.GAME_STATE = "gameState";
com_utterlySuperb_queueGame_states_game_gameObjects_Shopper.items = ["box","bread","carrot","crisps","juice","bananas","ketchup","lettuce","toiletPaper"];
com_utterlySuperb_queueGame_states_game_hud_Hud.CLICK_BET = "clickBet";
com_utterlySuperb_queueGame_states_game_hud_Hud.SWITCH_SPEED = "switchSpeed";
com_utterlySuperb_queueGame_states_game_hud_Hud.CLICK_PLAY_PAUSE = "clickPlayPause";
com_utterlySuperb_queueGame_states_game_hud_Hud.SOUND_CHANGE = "soundChange";
com_utterlySuperb_queueGame_ui_TextHelper.HEADER = "header";
com_utterlySuperb_queueGame_ui_TextHelper.BODY = "body";
Main.main();
})();
